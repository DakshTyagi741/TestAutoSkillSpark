<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="19" passed="16" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-01T20:41:19 IST" name="Suite" finished-at="2024-05-01T20:44:35 IST" duration-ms="195604">
    <groups>
    </groups>
    <test started-at="2024-05-01T20:41:19 IST" name="Test" finished-at="2024-05-01T20:44:35 IST" duration-ms="195604">
      <class name="SkillSpark.Signup">
        <test-method signature="main_function(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:SkillSpark.Signup@942a29c]" started-at="2024-05-01T20:41:19 IST" name="main_function" data-provider="dp" finished-at="2024-05-01T20:41:29 IST" duration-ms="9988" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[John]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Doe]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[john.doe@example.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[passwor]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[passwor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main_function -->
        <test-method signature="main_function(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:SkillSpark.Signup@942a29c]" started-at="2024-05-01T20:41:29 IST" name="main_function" data-provider="dp" finished-at="2024-05-01T20:41:38 IST" duration-ms="9488" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Jane]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Doe]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[jane.doe@example.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[veryLongPassword1234567890]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[veryLongPassword1234567890]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main_function -->
        <test-method signature="main_function(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:SkillSpark.Signup@942a29c]" started-at="2024-05-01T20:41:38 IST" name="main_function" data-provider="dp" finished-at="2024-05-01T20:41:48 IST" duration-ms="9600" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Michael]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Scott]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[michael.scott@dundermifflin.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PASSWORD123!]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[PASSWORD123!]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main_function -->
        <test-method signature="main_function(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:SkillSpark.Signup@942a29c]" started-at="2024-05-01T20:41:48 IST" name="main_function" data-provider="dp" finished-at="2024-05-01T20:41:59 IST" duration-ms="10668" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Dwight]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Schrute]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dwight.schrute@dundermifflin.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[password123$]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[password123$]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main_function -->
        <test-method signature="main_function(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:SkillSpark.Signup@942a29c]" started-at="2024-05-01T20:41:59 IST" name="main_function" data-provider="dp" finished-at="2024-05-01T20:42:08 IST" duration-ms="9517" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Pam]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Beesly]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[pam.beesly@dundermifflin.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[password1234]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[password1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main_function -->
        <test-method signature="main_function(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:SkillSpark.Signup@942a29c]" started-at="2024-05-01T20:42:08 IST" name="main_function" data-provider="dp" finished-at="2024-05-01T20:42:18 IST" duration-ms="9520" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Jim]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Halpert]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[jim.halpert@dundermifflin.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[password123$]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[differentPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main_function -->
        <test-method signature="main_function(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:SkillSpark.Signup@942a29c]" started-at="2024-05-01T20:42:18 IST" name="main_function" data-provider="dp" finished-at="2024-05-01T20:42:27 IST" duration-ms="9520" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Angela]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Martin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[angela.martin@dundermifflin.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Password123$]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Password123$]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main_function -->
        <test-method signature="main_function(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:SkillSpark.Signup@942a29c]" started-at="2024-05-01T20:42:27 IST" name="main_function" data-provider="dp" finished-at="2024-05-01T20:42:37 IST" duration-ms="9393" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Kevin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Malone]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[kevin.malone@dundermifflin.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[654321@Abc]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[65432@Ab]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main_function -->
        <test-method signature="main_function(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:SkillSpark.Signup@942a29c]" started-at="2024-05-01T20:42:37 IST" name="main_function" data-provider="dp" finished-at="2024-05-01T20:42:46 IST" duration-ms="9674" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Oscar]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Martinez]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[oscar.martinez@dundermifflin.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[12345678@ADc]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12345678@ADc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main_function -->
      </class> <!-- SkillSpark.Signup -->
      <class name="SkillSpark.CourseAdd">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:SkillSpark.CourseAdd@6892b3b6]" started-at="2024-05-01T20:43:34 IST" name="beforeMethod" finished-at="2024-05-01T20:43:36 IST" duration-ms="2200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="courseAdd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.String;,java.lang.String,java.lang.String,[Ljava.lang.String;,[Ljava.lang.String;,[LSkillSpark.CourseAdd$Lecture;,boolean)[pri:0, instance:SkillSpark.CourseAdd@6892b3b6]" started-at="2024-05-01T20:43:36 IST" name="courseAdd" data-provider="dp" finished-at="2024-05-01T20:43:46 IST" duration-ms="10190" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MERN stack]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[This is a mern stack course]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[65]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Web Development]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@598657cd]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[E:\Downloads\mern-stack.png]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Will make you a good web developer]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@456aa471]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[[Ljava.lang.String;@69e2fe3b]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[[LSkillSpark.CourseAdd$Lecture;@27afbf14]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseAdd -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:SkillSpark.CourseAdd@6892b3b6]" started-at="2024-05-01T20:43:46 IST" name="afterMethod" finished-at="2024-05-01T20:43:48 IST" duration-ms="1489" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:SkillSpark.CourseAdd@6892b3b6]" started-at="2024-05-01T20:43:48 IST" name="beforeMethod" finished-at="2024-05-01T20:43:50 IST" duration-ms="2202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="courseAdd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.String;,java.lang.String,java.lang.String,[Ljava.lang.String;,[Ljava.lang.String;,[LSkillSpark.CourseAdd$Lecture;,boolean)[pri:0, instance:SkillSpark.CourseAdd@6892b3b6]" started-at="2024-05-01T20:43:50 IST" name="courseAdd" data-provider="dp" finished-at="2024-05-01T20:44:00 IST" duration-ms="10390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Flutter]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[This is a flutter course]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[78]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[App Development]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@598657cd]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[E:\Downloads\flutter.jpeg]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[You will be a master in web development]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@456aa471]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[[Ljava.lang.String;@69e2fe3b]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[[LSkillSpark.CourseAdd$Lecture;@27afbf14]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseAdd -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:SkillSpark.CourseAdd@6892b3b6]" started-at="2024-05-01T20:44:00 IST" name="afterMethod" finished-at="2024-05-01T20:44:01 IST" duration-ms="905" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:SkillSpark.CourseAdd@6892b3b6]" started-at="2024-05-01T20:44:01 IST" name="beforeMethod" finished-at="2024-05-01T20:44:03 IST" duration-ms="2142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="courseAdd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.String;,java.lang.String,java.lang.String,[Ljava.lang.String;,[Ljava.lang.String;,[LSkillSpark.CourseAdd$Lecture;,boolean)[pri:0, instance:SkillSpark.CourseAdd@6892b3b6]" started-at="2024-05-01T20:44:03 IST" name="courseAdd" data-provider="dp" finished-at="2024-05-01T20:44:15 IST" duration-ms="11534" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Flutter]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[78]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[App Development]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.String;@598657cd]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[E:\Downloads\flutter.jpeg]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[You will be a master in web development]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[[Ljava.lang.String;@456aa471]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[[Ljava.lang.String;@69e2fe3b]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[[LSkillSpark.CourseAdd$Lecture;@27afbf14]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"*[name='sectionName']"}
  (Session info: chrome=124.0.6367.63)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [fa7f11bd1cc09c01037e8cc270773f2f, findElement {using=name, value=sectionName}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 124.0.6367.63, chrome: {chromedriverVersion: 124.0.6367.91 (51df0e5e17a8..., userDataDir: C:\Users\ASUS\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58373}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58373/devtoo..., se:cdpVersion: 124.0.6367.63, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: fa7f11bd1cc09c01037e8cc270773f2f]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"*[name='sectionName']"}
  (Session info: chrome=124.0.6367.63)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [fa7f11bd1cc09c01037e8cc270773f2f, findElement {using=name, value=sectionName}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 124.0.6367.63, chrome: {chromedriverVersion: 124.0.6367.91 (51df0e5e17a8..., userDataDir: C:\Users\ASUS\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58373}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58373/devtoo..., se:cdpVersion: 124.0.6367.63, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: fa7f11bd1cc09c01037e8cc270773f2f
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:519)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:356)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at SkillSpark.CourseAdd.part2(CourseAdd.java:34)
at SkillSpark.CourseAdd.courseAdd(CourseAdd.java:114)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseAdd -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:SkillSpark.CourseAdd@6892b3b6]" started-at="2024-05-01T20:44:15 IST" name="afterMethod" finished-at="2024-05-01T20:44:16 IST" duration-ms="1262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- SkillSpark.CourseAdd -->
      <class name="SkillSpark.AddToCart">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:SkillSpark.AddToCart@18df8434]" started-at="2024-05-01T20:42:46 IST" name="beforeMethod" finished-at="2024-05-01T20:42:49 IST" duration-ms="2141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="f()[pri:0, instance:SkillSpark.AddToCart@18df8434]" started-at="2024-05-01T20:42:49 IST" name="f" finished-at="2024-05-01T20:42:56 IST" duration-ms="7095" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:SkillSpark.AddToCart@18df8434]" started-at="2024-05-01T20:42:56 IST" name="beforeMethod" finished-at="2024-05-01T20:42:58 IST" duration-ms="2266" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="f()[pri:0, instance:SkillSpark.AddToCart@18df8434]" started-at="2024-05-01T20:42:58 IST" name="f" finished-at="2024-05-01T20:43:05 IST" duration-ms="7035" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:SkillSpark.AddToCart@18df8434]" started-at="2024-05-01T20:43:05 IST" name="beforeMethod" finished-at="2024-05-01T20:43:07 IST" duration-ms="2138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="f()[pri:0, instance:SkillSpark.AddToCart@18df8434]" started-at="2024-05-01T20:43:07 IST" name="f" finished-at="2024-05-01T20:43:14 IST" duration-ms="7169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:SkillSpark.AddToCart@18df8434]" started-at="2024-05-01T20:43:14 IST" name="beforeMethod" finished-at="2024-05-01T20:43:17 IST" duration-ms="2288" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="f()[pri:0, instance:SkillSpark.AddToCart@18df8434]" started-at="2024-05-01T20:43:17 IST" name="f" finished-at="2024-05-01T20:43:24 IST" duration-ms="7896" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:SkillSpark.AddToCart@18df8434]" started-at="2024-05-01T20:43:24 IST" name="beforeMethod" finished-at="2024-05-01T20:43:27 IST" duration-ms="2362" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="f()[pri:0, instance:SkillSpark.AddToCart@18df8434]" started-at="2024-05-01T20:43:27 IST" name="f" finished-at="2024-05-01T20:43:34 IST" duration-ms="7045" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
      </class> <!-- SkillSpark.AddToCart -->
      <class name="SkillSpark.Login">
        <test-method signature="loginFunction(java.lang.String,java.lang.String)[pri:0, instance:SkillSpark.Login@6e6f2380]" started-at="2024-05-01T20:44:16 IST" name="loginFunction" data-provider="dp" finished-at="2024-05-01T20:44:25 IST" duration-ms="9235" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[rvrv66692@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[654321@Abc]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [https://new-skill-spark.vercel.app/dashboard/my-profile] but found [https://new-skill-spark.vercel.app/signup]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [https://new-skill-spark.vercel.app/dashboard/my-profile] but found [https://new-skill-spark.vercel.app/signup]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at SkillSpark.Login.loginFunction(Login.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginFunction -->
        <test-method signature="loginFunction(java.lang.String,java.lang.String)[pri:0, instance:SkillSpark.Login@6e6f2380]" started-at="2024-05-01T20:44:25 IST" name="loginFunction" data-provider="dp" finished-at="2024-05-01T20:44:35 IST" duration-ms="9160" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[bhjsdfjg@ggmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[654321@Abc]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [https://new-skill-spark.vercel.app/dashboard/my-profile] but found [https://new-skill-spark.vercel.app/signup]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [https://new-skill-spark.vercel.app/dashboard/my-profile] but found [https://new-skill-spark.vercel.app/signup]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at SkillSpark.Login.loginFunction(Login.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginFunction -->
      </class> <!-- SkillSpark.Login -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
